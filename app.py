import streamlit as st
import json
from openai import OpenAI

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤ ===
if "NEBIUS_API_KEY" not in st.secrets:
    st.error("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç NEBIUS_API_KEY –≤ secrets.")
    st.stop()

# === –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç Nebius ===
@st.cache_resource
def get_nebius_client():
    return OpenAI(
        base_url="https://api.studio.nebius.com/v1/",
        api_key=st.secrets["NEBIUS_API_KEY"]
    )

client = get_nebius_client()

# === –°—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ–≥–æ—Ç–∏–ø (raw GitHub) ===
LOGO_URL = "https://raw.githubusercontent.com/TimPad/html/main/DC.svg"

# === –ü—Ä–∏–º–µ—Ä HTML-–≤—ã–≤–æ–¥–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º ===
EXAMPLE_HTML = f"""
<div style="font-family: 'Inter', 'Segoe UI', Roboto, Arial, sans-serif; max-width: 860px; margin: 40px auto; background: #ffffff; border-radius: 16px; box-shadow: 0 4px 14px rgba(0,0,0,0.08); border: 1px solid #e5ebf8; overflow: hidden;">
    <!-- HEADER -->
    <div style="background: #00256c; color: white; padding: 28px 32px; text-align: center;">
        <img src="{LOGO_URL}" alt="–õ–æ–≥–æ—Ç–∏–ø Data Culture" style="height: 48px; margin-bottom: 16px;">
        <p><span style="font-size: 1.6em; font-weight: 700;">–ó–ê–ì–û–õ–û–í–û–ö –û–ë–™–Ø–í–õ–ï–ù–ò–Ø</span></p>
        <p style="margin-top: 8px; line-height: 1.5;">–ö—Ä–∞—Ç–∫–æ–µ –≤–≤–µ–¥–µ–Ω–∏–µ –∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç.</p>
    </div>

    <!-- CONTENT -->
    <div style="padding: 28px 32px; color: #111827; line-height: 1.65;">
        <p>–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è...</p>
        <h3 style="color: #00256c;">–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫</h3>
        <ul style="margin: 12px 0 22px 22px;">
            <li>–ü—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞</li>
        </ul>

        <div style="background: #f4f6fb; border-radius: 10px; padding: 16px 20px; margin: 16px 0;">
            <p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫</p>
        </div>

        <div style="background: #fff8e1; border-left: 4px solid #f59e0b; padding: 14px 18px; border-radius: 8px; margin-bottom: 20px;">
            <p style="margin: 0; font-weight: 600; color: #92400e;">‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í–∞–∂–Ω–æ–µ —É—Ç–æ—á–Ω–µ–Ω–∏–µ.</p>
        </div>

        <div style="background: #f0fdf4; border-left: 4px solid #16a34a; padding: 16px 20px; border-radius: 8px;">
            <p style="margin: 4px 0 0;"><strong>–£–¥–∞—á–∏!</strong> üöÄ</p>
        </div>
    </div>
</div>
""".strip()

# === –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è LLM ===
SYSTEM_MESSAGE = (
    "–í—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫ –ù–ò–£ –í–®–≠. "
    "–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ HTML-–∫–∞—Ä—Ç–æ—á–∫—É, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É—è —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º—É —Å—Ç–∏–ª—é. "
    "–í —à–∞–ø–∫–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ª–æ–≥–æ—Ç–∏–ø –ø–æ —Å—Å—ã–ª–∫–µ: " + LOGO_URL + ". "
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ CSS-—Å—Ç–∏–ª–∏ –∏–∑ –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ –ø—Ä–∏–º–µ—Ä–∞. "
    "–ù–µ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ—è—Å–Ω–µ–Ω–∏–π, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–ª–∏ –ª–∏—à–Ω–∏—Ö —Ç–µ–≥–æ–≤. "
    "–í–µ—Ä–Ω–∏—Ç–µ –¢–û–õ–¨–ö–û –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –≤ —Ñ–æ—Ä–º–∞—Ç–µ: {\"type\": \"HTML\", \"content\": \"<div>...</div>\"}.\n\n"
    "–ü—Ä–∏–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞:\n" + EXAMPLE_HTML
)

# === –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML ===
def generate_hse_html(client: OpenAI, user_text: str) -> str:
    response = client.chat.completions.create(
        model="Qwen/Qwen3-235B-A22B-Thinking-2507",
        response_format={"type": "json_object"},
        messages=[
            {"role": "system", "content": SYSTEM_MESSAGE},
            {"role": "user", "content": user_text}
        ],
        timeout=60.0
    )

    raw_content = response.choices[0].message.content.strip()

    try:
        parsed = json.loads(raw_content)
    except json.JSONDecodeError:
        raise ValueError(f"–ú–æ–¥–µ–ª—å –≤–µ—Ä–Ω—É–ª–∞ –Ω–µ-JSON. –û—Ç–≤–µ—Ç:\n{raw_content[:500]}")

    if not isinstance(parsed, dict):
        raise ValueError("–û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º JSON.")

    if parsed.get("type") != "HTML":
        raise ValueError("–ü–æ–ª–µ 'type' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'HTML'.")

    content = parsed.get("content")
    if not isinstance(content, str) or not content.strip():
        raise ValueError("–ü–æ–ª–µ 'content' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç–æ–µ.")

    return content.strip()

# === Streamlit UI ===
st.set_page_config(page_title="HSE HTML Generator", page_icon="üéì", layout="wide")
st.title("üéì –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫ –ù–ò–£ –í–®–≠")
st.caption("–°–æ–∑–¥–∞—ë—Ç HTML-–∫–∞—Ä—Ç–æ—á–∫—É —Ä–∞—Å—Å—ã–ª–∫–∏ –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ –í–®–≠ —á–µ—Ä–µ–∑ Nebius API")

user_text = st.text_area(
    "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è:",
    height=250,
    placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞ –∏–ª–∏ –Ω–æ–≤–æ—Å—Ç–∏..."
)

if st.button("‚ú® –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å HTML"):
    if not user_text.strip():
        st.warning("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é.")
    else:
        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —á–µ—Ä–µ–∑ Qwen3-235B..."):
            try:
                html_code = generate_hse_html(client, user_text)
                st.success("‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")

                st.subheader("üìÑ HTML-–∫–æ–¥")
                st.code(html_code, language="html")

                st.download_button(
                    label="üíæ –°–∫–∞—á–∞—Ç—å HTML-—Ñ–∞–π–ª",
                    data=html_code.encode("utf-8"),
                    file_name="hse_card.html",
                    mime="text/html"
                )

                st.subheader("üåê –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä")
                st.components.v1.html(html_code, height=1000, scrolling=True)

            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")
else:
    st.info("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ ¬´‚ú® –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å HTML¬ª, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É.")
